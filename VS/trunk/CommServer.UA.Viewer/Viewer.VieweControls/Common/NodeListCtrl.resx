<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="PopupMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DeleteMI.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>