<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5KMEAOSjDADkoxQA5KMdAOSjJwDk
        ozoA5KNQAOSjZQDkonMA46GBAOSikQDko4IA5KMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABZBSCwWQUhkFkFIoBZBSNQWQUioAAAAAAAAAAAAAAAAA5qUEAOSjdwDko78A5KPTAOSj3gDk
        o+YA5KPvAOSj+ADko/8A5KL/AOSg/wTsqv8h8rf/D++v/wDloP8A46JgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQUgUFkFINBZBSFQWQUh4FkFIoBZBSPQWQUlMFkFJoBZBSdQWQ
        UoMFkFKRBZBSoQWQUrcFkFLOBZBS5AWQUvIFkFL+BZBS/wWQUvwFkFKWBYxOBQAAAAAA6acdAOSj/gDk
        o/8A5KP/AOSj/wDko/8A5KP/AOSj/wDjof8D6ab/W+3E/4K/rP97mYz/grCg/2npxf8Q6qtpAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkFJfBZBSyQWQUt4FkFLmBZBS7wWQUvYFkFL+BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BYxOSwAA
        AAAA56YJAOSj3gDko/8A5KP/AOSj/wDko/8A5KP/AOOh/wnrqP+O5Mz/XXNi/wBEGP8APg7/ADkO/0Nj
        Tf/M5t+fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkFLZBZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BY1PowAAAAAAAAAAAOWkuQDko/8A5KP/AOSj/wDko/8A5KL/Aeij/33rzf9MbFb/AEoR/0CD
        Xf95uZ3/WJh4/wBFEv94loT2////IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkFJ1BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BY9R2QWSVAMAAAAAAOemcwDko/8A5KP/AOSj/wDko/8A5Z//YvLL/2+J
        eP8ATBX/Sohj/4Hx0f8V87P/nejS/wxMJf84eFX/////RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFkFIQBZBS4gWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS+AWLTSgAAAAAAOmoOADko/8A5KP/AOSj/wDk
        n/9E9MP/f5+Q/wBOHf8AUiD/ls22/xD4uP9C+Mb/hKSW/wAyCf96o4vy////IAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABZBSXgWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWLTV0AAAAAAOmoGQDk
        o/IA5KP/AOOf/zTzvv+Vsqb/CVAk/wBXJf8ASBz/Zo17/4jGuP98l4z/AzcU/yRhOf+u6taxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZBSBQWQUtAFkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWN
        T5UAAAAAAOOiAQDlpMYA45//LPK5/5e/sv8TUir/AFYj/wBNI/8AVCb/AFEi/wk9Hf8AMQn/MWlE/5fd
        xf8b7bGdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQUkwFkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWPUdEFklQBAAAAAADloJon87j/lsW3/xpSLP8AVSP/AE0j/wBSJf8AYy3/AGAr/wBF
        Ff9RgWL/lezS/xPsrv8A46CrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFkFK4BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUvIDjE0eAAAAAEb4xWqRyLj/JVg2/wBUIf8ATiP/AFIl/wBj
        Lf8AXij/AEcb/2uZfv978M7/Bemn/wDjof8A5KO2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFkFI5BZBS/AWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wOQUf8Cjk9e3PPoB9rX2MUeWDT/AFMf/wBO
        JP8AUSX/AGIt/wBcJv8KTSL/ibOd/2D2zP8A5qH/AOOi/wDko/8A5KPFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZBSngWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wCKSP8+rnyx19fXtCFc
        Of8AUh//AE4j/wBRJf8AYi3/AFkj/xZYMP+Pxa//RfTC/wDkn/8A5KP/AOSj/wDko/8A5qSoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZBSJQWQUvgFkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/AIxL/yKh
        Z/+gwLL/Ils5/wBSH/8ATiP/AFEl/wBjLf8AVx//JWI9/7/d09Ar+MCHAOijfADpqHIA56ZoAOalWwDo
        pkcA358HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQ
        UocFkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8AjEv/H6Bl/5W6qv8tYkL/AFMf/wBOJP8AUSX/AGIt/wBXH/8+c1L92+XgoJnawQEAAAAAAAAAAAAA
        AAAAAAAAAAAAAASmZwkFmlwcBYpNKwWPUTUFkFI8BZBSRAWQUk4FkFJWBZBSWQWQUiIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAWQUhUFkFLsBZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/AI5P/wCL
        Sv8AjEr/AIxK/wCJRv8ioWf/o8K1/yphQP8AUh7/AE4j/wBRJf8AYiz/AFUe/0d6XP+azrf1N6h0mgCK
        SJsFi02qBYtOuQWLTscFjE7VBY1P4wWMT+0FjlD3BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        UtIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkFJwBZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wOP
        Uf8AjEr/JqRs/1+4kf9ptZT/Z7aT/2W9lf+VuKj/J2A9/wBTIP8ATyT/AFEl/wBiLP8AUx3/V4Vq/4bG
        qf8HklP/AItL/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUuEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkFIIBZBS2gWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/AY5P/weTU/92vZ7/h52R/1l9Zv8yYEb/N2NK/11/bP8bXjn/AFUh/wBOJP8AUSX/AGIs/wBR
        Gv9ljnf/iMqt9ACOTf8CjlD/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUtEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZBSYgWQ
        Uv8FkFL/BZBS/wWQUv8DjlD/DZZY/5HCrP9QeGD/AE4d/wBPHf8AVCL/AFwm/wBaIv8AWCX/AE4k/wBR
        Jf8AYSz/AFMd/2aReP/l8+1iFZhdlACNTv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUsUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABZBSBwWQUs8FkFL/BZBS/wWQUv8AjEv/cbyb/057Yv8AVR3/AFgo/wBXJ/8AYCz/AGUt/wBb
        Kf8ATiP/AFAk/wBhLP8AVh//S39i/////3UAAAAAAIhGZAWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUrAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQUicFkFKuBZBS2ACKSM4rpG/NlLOi/gBVIP8AWCj/AFEi/wBU
        Hv8AYCn/AFsq/wBOI/8AUCT/AGAr/wBcJf80cE7/8PX0hAAAAAAAAAAAAotLMgWQUv4FkFL/BZBS/wWQ
        Uv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQUv8FkFL/BZBS/wWQ
        UpMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIpJAwAAAADK59tdS4Fj/wBQ
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////AAD////gAP8AAP//
        BwAA/wAAwAABAAD/AAAAAAEAAP8AAAAAAYAAfwAAAAAAgAB/AAAAAACAAH8AAIAAAIAA/wAAgAAAgAD/
        AADAAABAAP8AAOAAAEAA/wAA4AAAAAD/AADwAAAAAP8AAPAAAAAA/wAA+AAAAHwAAAD4AAAAAAAAAPwA
        AAAAAAAA/AAAAAAAAAD+AAAAAAAAAP4AABAAAAAA/wAAMAAAAAD/0AAQAAAAAP/wAAgAAAAA//AACAAA
        AAD/8IAIAAAAAP/xgAAAAAAA//+ABAAAAAD//wAEAAAAAP//AAQAAQAA//8AD///AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>